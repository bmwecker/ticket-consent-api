/**
 * –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏–π —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
 * –î–õ–Ø –°–¢–†–ê–ù–ò–¶–´ –ü–û–ö–£–ü–ö–ò –ë–ò–õ–ï–¢–û–í –≤ Tilda
 * 
 * –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –£–°–¢–ê–ù–û–í–ö–ï:
 * 1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –í–ï–°–¨ —ç—Ç–æ—Ç –∫–æ–¥
 * 2. –í Tilda: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Üí HTML-–∫–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ HEAD –∏–ª–∏ BODY (–¥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
 * 3. –ó–∞–º–µ–Ω–∏—Ç–µ –í–ê–®–ï_API_URL –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –≤–∞—à–µ–≥–æ API –Ω–∞ Render
 * 4. –ó–∞–º–µ–Ω–∏—Ç–µ –≤–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ
 * 
 * –í–ê–ñ–ù–û: –≠—Ç–æ—Ç –∫–æ–¥ –ù–ï –õ–û–ú–ê–ï–¢ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª!
 * –û–Ω —Ç–æ–ª—å–∫–æ –î–û–ë–ê–í–õ–Ø–ï–¢ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.
 */

<style>
  /* –ë–∞–Ω–Ω–µ—Ä (–í–ê–® –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ô –ö–û–î - –ù–ï –ú–ï–ù–Ø–ï–ú) */
  .gate-alert {
    position: fixed;
    bottom: -200px;
    left: 50%;
    transform: translateX(-50%);
    background: #ff5555;
    color: #fff;
    padding: 30px 50px;
    border-radius: 16px;
    box-shadow: 0 8px 30px rgba(0,0,0,0.4);
    font-size: 60px;
    font-weight: 800;
    text-align: center;
    line-height: 1.2;
    z-index: 9999;
    display: block;
    opacity: 0;
    max-width: 90vw;
    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .gate-alert.is-visible {
    bottom: 50px;
    opacity: 1;
  }

  /* –ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤ */
  @media (max-width: 1200px) {
    .gate-alert {
      font-size: 40px;
      padding: 24px 40px;
    }
  }

  /* –ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */
  @media (max-width: 768px) {
    .gate-alert {
      font-size: 20px;
      padding: 16px 24px;
      border-radius: 12px;
    }
  }
</style>

<div class="gate-alert" id="gate-alert"></div>

<script>
(function () {
  // ========================================
  // –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø - –ò–ó–ú–ï–ù–ò–¢–ï –≠–¢–ò –ó–ù–ê–ß–ï–ù–ò–Ø
  // ========================================
  
  // URL –≤–∞—à–µ–≥–æ API –Ω–∞ Render (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è)
  const API_URL = 'https://your-api-name.onrender.com/api/consent';
  
  // –í–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–æ–±–Ω–æ–≤–ª—è–π—Ç–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤)
  const DOCUMENT_VERSIONS = {
    'ticket_terms': 'v2025-10-28',      // –£—Å–ª–æ–≤–∏—è –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
    'refund_policy': 'v2025-10-28',     // –ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    'privacy_policy': 'v2025-10-28'     // –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
  };
  
  // ========================================
  // –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ô –ö–û–î (–ù–ï –ú–ï–ù–Ø–ï–ú)
  // ========================================
  
  // –ö–ª–∞—Å—Å—ã –∫–Ω–æ–ø–æ–∫ (–≤–∞—à –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥)
  const CLS_ACCEPT_TERMS      = 'js-accept-terms';       // –£—Å–ª–æ–≤–∏—è –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
  const CLS_ACCEPT_PRIVACY    = 'js-accept-privacy';     // –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
  const CLS_ACCEPT_DISCLAIMER = 'js-accept-disclaimer';  // –ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
  const CLS_GO_NEXT           = 'js-go-next';            // –ü–µ—Ä–µ–π—Ç–∏

  let acceptedTerms = false;
  let acceptedPrivacy = false;
  let acceptedDisclaimer = false;

  const alertBox = document.getElementById('gate-alert');

  function showAlert(msg) {
    if (!alertBox) return;
    alertBox.textContent = msg;
    alertBox.classList.add('is-visible');
    clearTimeout(alertBox._timer);
    alertBox._timer = setTimeout(() => {
      alertBox.classList.remove('is-visible');
    }, 4000);
  }

  function closeParentPopup(btn) {
    const popup = btn.closest('.t-popup');
    if (popup) {
      const closeBtn = popup.querySelector('.t-popup__close, .t-popup__close-icon');
      if (closeBtn) closeBtn.click();
      else {
        popup.classList.remove('t-popup_show');
        document.body.classList.remove('t-body_popupshowed');
      }
    }
  }

  // ========================================
  // –ù–û–í–´–ô –ö–û–î - –õ–û–ì–ò–†–û–í–ê–ù–ò–ï (–î–û–ë–ê–í–õ–Ø–ï–ú)
  // ========================================
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID —Å–µ—Å—Å–∏–∏ (—Å–æ–∑–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
  const SESSION_ID = generateUUID();
  
  console.log('üîê Consent Logger initialized. Session ID:', SESSION_ID);
  
  // –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ UUID v4
  function generateUUID() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      const r = Math.random() * 16 | 0;
      const v = c === 'x' ? r : (r & 0x3 | 0x8);
      return v.toString(16);
    });
  }
  
  // –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è SHA-256 —Ö–µ—à–∞
  async function sha256(text) {
    try {
      const encoder = new TextEncoder();
      const data = encoder.encode(text);
      const hashBuffer = await crypto.subtle.digest('SHA-256', data);
      const hashArray = Array.from(new Uint8Array(hashBuffer));
      return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
    } catch (error) {
      console.error('Error computing SHA256:', error);
      return 'hash-error-' + Date.now();
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  async function logConsent(documentType, documentText) {
    try {
      const hash = await sha256(documentText);
      
      const data = {
        session_id: SESSION_ID,
        document_type: documentType,
        document_version: DOCUMENT_VERSIONS[documentType] || 'v2025-10-28',
        document_hash: hash,
        consent_given: true,
        consent_timestamp: new Date().toISOString(),
        user_agent: navigator.userAgent,
        referrer: document.referrer || 'direct',
        page_url: window.location.href,
        consent_text: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Å ${documentType}`
      };
      
      console.log('üì§ Sending consent log:', documentType);
      
      const response = await fetch(API_URL, {
        method: 'POST',
        headers: { 
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });
      
      if (response.ok) {
        const result = await response.json();
        console.log('‚úÖ Consent logged successfully:', result.consent_log_id);
        return true;
      } else {
        console.warn('‚ö†Ô∏è Failed to log consent:', response.status);
        return false;
      }
    } catch (error) {
      console.error('‚ùå Error logging consent:', error);
      // –ù–ï –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      return false;
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–∑ –ø–æ–ø–∞–ø–∞
  function getDocumentText(btn) {
    const popup = btn.closest('.t-popup');
    if (!popup) return '';
    
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –≤ –ø–æ–ø–∞–ø–µ (–æ–±—ã—á–Ω–æ –≤ .t-text, .t-descr –∏–ª–∏ .t-popup__content)
    const textElement = popup.querySelector('.t-text, .t-descr, .t-popup__content');
    return textElement ? textElement.innerText.trim() : '';
  }
  
  // –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤ –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  const DOCUMENT_TYPE_MAP = {
    [CLS_ACCEPT_TERMS]: 'ticket_terms',         // –£—Å–ª–æ–≤–∏—è –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤
    [CLS_ACCEPT_DISCLAIMER]: 'refund_policy',   // –ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    [CLS_ACCEPT_PRIVACY]: 'privacy_policy'      // –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
  };
  
  // ========================================
  // –ú–û–î–ò–§–ò–¶–ò–†–û–í–ê–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø onAccept
  // ========================================
  
  async function onAccept(which, btn) {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const documentText = getDocumentText(btn);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞
    const buttonClass = Object.keys(DOCUMENT_TYPE_MAP).find(cls => btn.classList.contains(cls));
    const documentType = DOCUMENT_TYPE_MAP[buttonClass];
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–≥–ª–∞—Å–∏–µ (–≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    if (documentType && documentText) {
      logConsent(documentType, documentText).catch(err => {
        console.error('Background consent logging failed:', err);
      });
    }
    
    // –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ô –ö–û–î - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É, –Ω–µ –∂–¥—ë—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    if (which === 'terms') acceptedTerms = true;
    if (which === 'privacy') acceptedPrivacy = true;
    if (which === 'disclaimer') acceptedDisclaimer = true;
    closeParentPopup(btn);
  }

  // ========================================
  // –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô (–û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ô –ö–û–î)
  // ========================================
  
  document.addEventListener('click', function (e) {
    const termsBtn = e.target.closest('.' + CLS_ACCEPT_TERMS);
    if (termsBtn) { e.preventDefault(); onAccept('terms', termsBtn); return; }

    const privacyBtn = e.target.closest('.' + CLS_ACCEPT_PRIVACY);
    if (privacyBtn) { e.preventDefault(); onAccept('privacy', privacyBtn); return; }

    const disclaimerBtn = e.target.closest('.' + CLS_ACCEPT_DISCLAIMER);
    if (disclaimerBtn) { e.preventDefault(); onAccept('disclaimer', disclaimerBtn); return; }

    const goBtn = e.target.closest('.' + CLS_GO_NEXT);
    if (goBtn && !(acceptedTerms && acceptedPrivacy && acceptedDisclaimer)) {
      e.preventDefault();
      let msgs = [];
      if (!acceptedTerms) msgs.push("–£—Å–ª–æ–≤–∏—è –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤");
      if (!acceptedPrivacy) msgs.push("–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏");
      if (!acceptedDisclaimer) msgs.push("–ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞");
      showAlert("–ü—Ä–∏–º–∏—Ç–µ: " + msgs.join(", ") + "!");
    }
  });
  
  // ========================================
  // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –°–æ—Ö—Ä–∞–Ω—è–µ–º SESSION_ID –≤ localStorage
  // (–ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–π–¥—ë—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É)
  // ========================================
  
  try {
    localStorage.setItem('ticket_session_id', SESSION_ID);
    console.log('üíæ Session ID saved to localStorage');
  } catch (e) {
    console.warn('Could not save session ID to localStorage:', e);
  }
  
})();
</script>

